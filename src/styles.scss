@use 'bootstrap/scss/bootstrap';
@use '@angular/material' as mat;
@import "fonts.scss";

// ‚úÖ Include Material core once globally
@include mat.core();


// ---------------------------------------------
// üé® Custom Color Palettes
// ---------------------------------------------

$custom-neutral: (
  0: hsl(200, 60%, 99%),
  100: hsl(0, 0%, 93%),
  200: hsl(217, 61%, 90%),
  300: hsl(0, 0%, 78%),
  600: hsl(226, 11%, 37%),
  700: hsl(225, 23%, 24%),
  800: hsl(226, 25%, 17%),
  900: hsl(227, 75%, 14%),
  contrast: (
    0: #000,
    100: #000,
    200: #000,
    300: #000,
    600: #fff,
    700: #fff,
    800: #fff,
    900: #fff,
  )
);

$button-color: (
  400: hsl(3, 86%, 64%),
  500: hsl(3, 71%, 56%),
  700: hsl(3, 77%, 44%),
);


// ---------------------------------------------
// üåô Dark Theme
// ---------------------------------------------
$dark-theme: mat.m2-define-dark-theme((
  color: (
    primary: mat.m2-define-palette($custom-neutral, 900),
    accent: mat.m2-define-palette($custom-neutral, 600),
    background: mat.m2-define-palette($custom-neutral, 800),
  ),
));

// ‚òÄÔ∏è Light Theme
$light-theme: mat.m2-define-light-theme((
  color: (
    primary: mat.m2-define-palette($custom-neutral, 200),
    accent: mat.m2-define-palette($custom-neutral, 300),
    background: mat.m2-define-palette($custom-neutral, 200)
  ),
));


// ---------------------------------------------
// üåì Theming Styles
// ---------------------------------------------

.light-theme {
  @include mat.all-component-themes($light-theme);

  --app-bg: linear-gradient(180deg, #EBF2FC 0%, #EEF8F9 100%) no-repeat fixed;
  background: var(--app-bg) no-repeat fixed;

  .mat-toolbar {
    background-color: mat.m2-get-color-from-palette($custom-neutral, 0);
  }

  .icon{
    background: mat.m2-get-color-from-palette($custom-neutral, 100) !important;
    border-color: mat.m2-get-color-from-palette($custom-neutral, 100) !important;
  }

  .mat-button{
    background: mat.m2-get-color-from-palette($custom-neutral, 0) !important;
    margin: 0 0.5rem !important;
    border-radius: 1.25rem !important;
    color: mat.m2-get-color-from-palette($custom-neutral, 900) !important;
    font-family: "Noto Sans", sans-serif !important;

  }

  .theme-font{
    color: mat.m2-get-color-from-palette($custom-neutral, 900) !important;
  }
}

.dark-theme {
  @include mat.all-component-themes($dark-theme);

  --app-bg: linear-gradient(180deg, #040918 0%, #091540 100%);
  background: var(--app-bg) no-repeat fixed;

  .mat-toolbar {
    background-color: mat.m2-get-color-from-palette($custom-neutral, 700);
    color: mat.m2-get-color-from-palette($custom-neutral,0);
    border-color: mat.m2-get-color-from-palette($custom-neutral, 800) !important;
    font-size: 1rem !important;

  }

  .icon{
    background: mat.m2-get-color-from-palette($custom-neutral, 600) !important;
    border-color: mat.m2-get-color-from-palette($custom-neutral, 600) !important;
    color: mat.m2-get-color-from-palette($button-color, 400) !important;
  }

  .mat-button{
    background: mat.m2-get-color-from-palette($custom-neutral, 700) !important;
    margin: 0 0.5rem !important;
    border-radius: 1.25rem !important;
    font-family: "Noto Sans", sans-serif !important;
    font-size: 1rem !important;
  }

  .theme-font{
    color: mat.m2-get-color-from-palette($custom-neutral, 100) !important;
  }

}

// ---------------------------------------------
// üåê Theme Detection (system-based)
// ---------------------------------------------

@media (prefers-color-scheme: light) {
  @include mat.core-color($light-theme);
}

/*

// ---------------------------------------------
// üîß CSS Reset & Global Styles
// ---------------------------------------------

‚úÖ Box-sizing for all elements ‚Üí Ensures consistent layout
‚úÖ Removes default margin ‚Üí Avoids unwanted spacing
‚úÖ Improves accessibility & performance ‚Üí Line-height & font-smoothing
‚úÖ Optimizes media elements ‚Üí Ensures icons/videos don‚Äôt overflow
‚úÖ Inherits fonts in form elements ‚Üí Avoids inconsistent text styles
‚úÖ Prevents text overflow issues ‚Üí Ensures readability
‚úÖ Root stacking context (isolation: isolate) ‚Üí Helps avoid z-index issues */

/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

body {
  /* 4. Add accessible line-height */
  line-height: 1.5;
  /* 5. Improve text rendering */
  -webkit-font-smoothing: antialiased;
  font-family: "Noto Sans", sans-serif !important;
  font-size: 1rem !important;

}

/* 6. Improve media defaults */
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input, button, textarea, select {
  font: inherit;
}

/* 8. Avoid text overflows */
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1, h2, h3, h4, h5, h6 {
  text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root, #__next {
  isolation: isolate;
}
